# Address to bind to for the DNS server
#bind = "0.0.0.0:5553"
bind = "127.0.0.1:5553"
#bind = "10.0.2.15:5553"

# Enable SCION
scion = true

# RHINE certificate to validate RRs with
cacertificatefile = "../netsys-lab_scion-rains/testdata/scionlab/CACert.pem"

# Root zone SCION servers
rootscionservers = [
"17-ffaa:1:1008,127.0.0.1:53",
"19-ffaa:1:fe4,127.0.0.1:53" # rhine.ovgu.scionlab.
]

# What kind of information should be logged, Log verbosity level [crit,error,warn,info,debug]
loglevel = "debug"

# List of locations to recursively read blocklists from (warning, every file found is assumed to be a hosts-file or domain list)
blocklistdir = "bl"

# Which clients allowed to make queries
accesslist = [
"0.0.0.0/0",
"::0/0"
]

#--------------------------------------------------------------------------------
# Config version, config and build versions can be different.
version = "1.2.0"



# Address to bind to for the DNS-over-TLS server
#bindtls = ":8853"

# Address to bind to for the DNS-over-HTTPS server
# binddoh = ":8053"

# TLS certificate file
tlscertificate = "ca/localhost/localhost-cert.pem"

# TLS private key file
tlsprivatekey = "ca/localhost/localhost-key.pem"

# Outbound ipv4 addresses, if you set multiple, sdns can use random outbound ipv4 address by request based
outboundips = [
    "10.0.2.15:3333"
  #  "127.0.0.1"
]

# Outbound ipv6 addresses, if you set multiple, sdns can use random outbound ipv6 address by request based
outboundip6s = [
]

# Root zone ipv4 servers
rootservers = [
"192.5.5.241:53",
"198.41.0.4:53",
"192.228.79.201:53",
"192.33.4.12:53",
"199.7.91.13:53",
"192.203.230.10:53",
"192.112.36.4:53",
"128.63.2.53:53",
"192.36.148.17:53",
"192.58.128.30:53",
"193.0.14.129:53",
"199.7.83.42:53",
"202.12.27.33:53"
]

# Root zone ipv6 servers
root6servers = [
#"[2001:500:2f::f]:53",
#"[2001:503:ba3e::2:30]:53",
#"[2001:500:200::b]:53",
#"[2001:500:2::c]:53",
#"[2001:500:2d::d]:53",
#"[2001:500:a8::e]:53",
#"[2001:500:12::d0d]:53",
#"[2001:500:1::53]:53",
#"[2001:7fe::53]:53",
#"[2001:503:c27::2:30]:53",
#"[2001:7fd::1]:53",
#"[2001:500:9f::42]:53",
#"[2001:dc3::35]:53"
]

# Trusted anchors for dnssec
rootkeys = [
".			172800	IN	DNSKEY	257 3 8 AwEAAaz/tAm8yTn4Mfeh5eyI96WSVexTBAvkMgJzkKTOiW1vkIbzxeF3+/4RgWOq7HrxRixHlFlExOLAJr5emLvN7SWXgnLh4+B5xQlNVz8Og8kvArMtNROxVQuCaSnIDdD5LKyWbRd2n9WGe2R8PzgCmr3EgVLrjyBxWezF0jLHwVN8efS3rCj/EWgvIWgb9tarpVUDK/b58Da+sqqls3eNbuv7pr+eoZG+SrDK6nWeL3c6H5Apxz7LjVc1uTIdsIXxuOLYA4/ilBmSVIzuDWfdRUfhHdY6+cn8HFRm+2hM8AnXGXws9555KrUB5qihylGa8subX2Nn6UwNR1AkUTV74bU="
]

# Failover resolver ipv4 or ipv6 addresses with port, left blank for disabled"
# fallbackservers = [
#	"8.8.8.8:53",
#	"8.8.4.4:53"
# ]
fallbackservers = [
]

# Forwarder resolver ipv4 or ipv6 addresses with port, left blank for disabled"
# forwarderservers = [
#	"8.8.8.8:53",
#	"8.8.4.4:53"
# ]
forwarderservers = [
]

# Address to bind to for the http API server, left blank for disabled
api = "127.0.0.1:8081"

# What kind of information should be logged, Log verbosity level [crit,error,warn,info,debug]
#loglevel = "debug"

# The location of access log file, left blank for disabled. SDNS uses Common Log Format by default.
# accesslog = ""

# List of remote blocklists address list. All lists will be download to blocklist folder.
# blocklists = [
# "http://mirror1.malwaredomains.com/files/justdomains",
# "https://raw.githubusercontent.com/StevenBlack/hosts/master/hosts",
# "http://sysctl.org/cameleon/hosts",
# "https://zeustracker.abuse.ch/blocklist.php?download=domainblocklist",
# "https://s3.amazonaws.com/lists.disconnect.me/simple_tracking.txt",
# "https://s3.amazonaws.com/lists.disconnect.me/simple_ad.txt",
# "https://raw.githubusercontent.com/quidsup/notrack/master/trackers.txt"
# ]
#blocklists = [
#]

# List of locations to recursively read blocklists from (warning, every file found is assumed to be a hosts-file or domain list)
#blocklistdir = "bl"

# IPv4 address to forward blocked queries to
nullroute = "0.0.0.0"

# IPv6 address to forward blocked queries to
nullroutev6 = "::0"

# Enables serving zone data from a hosts file, left blank for disabled
# the form of the entries in the /etc/hosts file are based on IETF RFC 952 which was updated by IETF RFC 1123.
hostsfile = ""

# Network timeout for each dns lookups in duration
timeout = "3s"

# Default error cache TTL in seconds
expire = 600

# Cache size (total records in cache)
cachesize = 256000

# Maximum iteration depth for a query
maxdepth = 30

# Query based ratelimit per second, 0 for disabled
ratelimit = 0

# Client ip address based ratelimit per minute, 0 for disabled
clientratelimit = 0

# Manual blocklist entries
blocklist = []

# Manual whitelist entries
whitelist = []

# DNS server identifier (RFC 5001), it's useful while operating multiple sdns. left blank for disabled
nsid = ""

# Enable to answer version.server, version.bind, hostname.bind, id.server chaos queries.
chaos = true

# Qname minimization level. If higher, it can be more complex and impact the response performance. 
# If set 0, qname minimization will be disable
qname_min_level = 5

# Empty zones return answer for RFC 1918 zones. Please see http://as112.net/
# for details of the problems you are causing and the counter measures that have had to be deployed.
# If the list empty, SDNS will be use default zones described at RFC.
# emptyzones [
#	"10.in-addr.arpa."
# ]
emptyzones = []

# You can add your own plugins to sdns. The plugin order is very important. 
# Plugins can be load before cache middleware.
# Config keys should be string and values can be anything.
# There is an example plugin at https://github.com/semihalev/sdnsexampleplugin
# [plugins]
#     [plugins.example]
#     path = "exampleplugin.so"
#     config = {key_1 = "value_1", key_2 = 2, key_3 = true}	
